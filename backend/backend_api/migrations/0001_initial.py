# Generated by Django 4.2.3 on 2023-07-26 22:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(db_index=True, max_length=254, unique=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                ("age", models.CharField(blank=True, max_length=255)),
                ("sex", models.CharField(blank=True, max_length=255)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("interests_array", models.CharField(blank=True, max_length=255)),
                ("photo", models.ImageField(blank=True, upload_to="photos/%Y/%m/%d/")),
                ("social_media_vk", models.CharField(blank=True, max_length=255)),
                ("social_media_tg", models.CharField(blank=True, max_length=255)),
                ("social_media_wa", models.CharField(blank=True, max_length=255)),
                ("social_media_ok", models.CharField(blank=True, max_length=255)),
                ("social_media_ig", models.CharField(blank=True, max_length=255)),
                ("audio_1", models.FileField(blank=True, upload_to="audio1/%Y/%m/%d/")),
                ("audio_2", models.FileField(blank=True, upload_to="audio2/%Y/%m/%d/")),
                ("audio_3", models.FileField(blank=True, upload_to="audio3/%Y/%m/%d/")),
                ("audio_4", models.FileField(blank=True, upload_to="audio4/%Y/%m/%d/")),
                ("audio_5", models.FileField(blank=True, upload_to="audio5/%Y/%m/%d/")),
                ("parameter_array", models.CharField(blank=True, max_length=255)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Профиль пользователя",
                "verbose_name_plural": "Профили пользователей",
            },
        ),
    ]
